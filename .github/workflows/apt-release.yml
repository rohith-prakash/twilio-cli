name: Apt Release
on:
  workflow_dispatch:

jobs:
  apt-build-release:
    runs-on: ubuntu-latest

    steps:
    - name: Check Out Repo
      uses: actions/checkout@v2
      
    # - name: Configure AWS credentials
    #   uses: aws-actions/configure-aws-credentials@v1
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
    #     aws-region: us-east-1
    
    # - name: Add Package Access Token
    #   uses: actions/checkout@master
    #   with:
    #     repository: rohith-prakash/test
    #     token: ${{ secrets.ACCESS_TOKEN }}
    #     path: ./test

    - name: generate linux tarball
      run: |
        npm cache clear & npm install
        npm install -g @oclif/dev-cli
        oclif-dev pack -t linux-x64,linux-arm

    - name: Build Deb Package
      # env:
      #   GPG_SIGNING_KEY: ${{ secrets.GPG_SIGNING_KEY}}
      #   GPG_SIGNING_KEY_ID: ${{ secrets.GPG_SIGNING_KEY_ID }}
      #   GPG_SIGNING_KEY_PASSPHRASE: ${{ secrets.GPG_SIGNING_KEY_PASSPHRASE }}
      run: | 
        node .github/scripts/pack-debian-apt.js x64,arm
    - name: Clone test repo
      uses: actions/checkout@master
      with:
        repository: rohith-prakash/test
        token: ${{ secrets.ACCESS_TOKEN }}
        path: ./test

    - name: Publish to packages
      run: |
        rsync -a ./dist/deb/ ./test/apt
        cd ./test
        git add .
        git config user.name github-actions
        git config user.email github-actions@github.com
        git commit -am "Uploaded packages"
        git push
  publish-github-pages:
    name: Deploy Github Pages of Package Repo
    needs: [apt-build-release]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout cli repo
        uses: actions/checkout@v2
      - name: Deploy Github Pages
        run: source .github/scripts/trigger-and-wait.sh
        env:
          INPUT_OWNER: rohith-prakash
          INPUT_REPO: test
          INPUT_GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          INPUT_WORKFLOW_FILE_NAME: build-and-deploy.yml
          INPUT_WAITING_INTERVAL: 10
          INPUT_PROPAGATE_FAILURE: true

  notify-complete-fail:
    if: ${{ failure() || cancelled() }}
    needs: [ publish-github-pages ]
    name: Notify Release Failed
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.ALERT_SLACK_WEB_HOOK }}
          SLACK_COLOR: "#ff3333"
          SLACK_USERNAME: CLI Release Bot
          SLACK_ICON_EMOJI: ":ship:"
          SLACK_TITLE: "Twilio Cli"
          SLACK_MESSAGE: 'APT Release Failed'
          MSG_MINIMAL: actions url
